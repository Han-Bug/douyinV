// Code generated by Kitex v0.4.4. DO NOT EDIT.

package message

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	api "tiktok/message/kitex_gen/api"
)

func serviceInfo() *kitex.ServiceInfo {
	return messageServiceInfo
}

var messageServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "Message"
	handlerType := (*api.Message)(nil)
	methods := map[string]kitex.MethodInfo{
		"chat":   kitex.NewMethodInfo(chatHandler, newMessageChatArgs, newMessageChatResult, false),
		"action": kitex.NewMethodInfo(actionHandler, newMessageActionArgs, newMessageActionResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "api",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.4.4",
		Extra:           extra,
	}
	return svcInfo
}

func chatHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*api.MessageChatArgs)
	realResult := result.(*api.MessageChatResult)
	success, err := handler.(api.Message).Chat(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newMessageChatArgs() interface{} {
	return api.NewMessageChatArgs()
}

func newMessageChatResult() interface{} {
	return api.NewMessageChatResult()
}

func actionHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*api.MessageActionArgs)
	realResult := result.(*api.MessageActionResult)
	success, err := handler.(api.Message).Action(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newMessageActionArgs() interface{} {
	return api.NewMessageActionArgs()
}

func newMessageActionResult() interface{} {
	return api.NewMessageActionResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) Chat(ctx context.Context, req *api.ChatReq) (r *api.ChatResp, err error) {
	var _args api.MessageChatArgs
	_args.Req = req
	var _result api.MessageChatResult
	if err = p.c.Call(ctx, "chat", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) Action(ctx context.Context, req *api.ActionReq) (r *api.ActionResp, err error) {
	var _args api.MessageActionArgs
	_args.Req = req
	var _result api.MessageActionResult
	if err = p.c.Call(ctx, "action", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
